name: Run Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - selfhosted 
jobs:  
  set_environment:
    runs-on: self-hosted  
    steps:  
      - name: Checkout code 
        uses: actions/checkout@v2
        
      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "$GITHUB_REF" == "refs/heads/qa" ]; then
            echo "environment=QA" >> "$GITHUB_ENV"
          elif [[ "$GITHUB_REF" =~ ^refs/heads/release/.* ]]; then
            echo "environment=PROD" >> "$GITHUB_ENV"
          else 
            echo "environment=QA" >> "$GITHUB_ENV" 
          fi         
    outputs:
      environment: ${{ env.environment }}

  # test-env:
  #   runs-on: self-hosted  
  #   needs: set_environment
  #   environment: ${{ needs.set_environment.outputs.environment }}
  #   env:
  #     Environments: ${{ needs.set_environment.outputs.environment }}
  #     workspace: ${{ github.workspace }}
  #   steps:  
  #     - name: Checkout code 
  #       uses: actions/checkout@v2
        
  #     - name: Determine environment based on branch
  #       id: set_env
  #       run: |
  #         sleep 30
  #         echo Hello-world

  # test-env1:
  #   runs-on: self-hosted  
  #   needs: test-env
  #   environment: ${{ needs.test-env.outputs.environment }}
  #   env:
  #     Environments: ${{ needs.test-env.outputs.environment }}
  #     workspace: ${{ github.workspace }}
  #   steps:  
  #     - name: Checkout code 
  #       uses: actions/checkout@v2
        
  #     - name: Determine environment based on branch
  #       id: set_env
  #       run: |
  #         echo Hello-world1
          
  # SonarCloud:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
  #     - name: SonarQube Scan
  #       uses: SonarSource/sonarqube-scan-action@v5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: https://sonarcloud.io
  #       with:
  #         args: >
  #           -Dsonar.projectKey=sharnitha-sonarcloud1_vue3-app
  #           -Dsonar.organization=sharnitha-sonarcloud1
      
  #     - name: SonarQube Quality Gate check
  #       id: sonarqube-quality-gate-check
  #       uses: SonarSource/sonarqube-scan-action@v5
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: https://sonarcloud.io
  #       with:
  #         args: >
  #           -Dsonar.projectKey=sharnitha-sonarcloud1_vue3-app
  #           -Dsonar.organization=sharnitha-sonarcloud1
      # The possible outputs of the `quality-gate-status` variable are `PASSED`, `WARN` or `FAILED`.
      # - name: "Example show SonarQube Quality Gate Status value"
      #   run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"
            
  build_Push-acr:
    runs-on: self-hosted
    needs: set_environment
    environment: ${{ needs.set_environment.outputs.environment }}
    env:
      Environments: ${{ needs.set_environment.outputs.environment }}
      workspace: ${{ github.workspace }}
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Docker build
          run: |
            docker build --target prod -t sharnithaacr.azurecr.io/frontend:${{ github.run_id }} .
        # - name: Run Trivy scan
        #   uses: aquasecurity/trivy-action@master
        #   with:
        #     image-ref: "Sharnithadockerimagstore.azurecr.io/frontend:${{ github.run_id }}"
        #     format: "table"
        #     exit-code: 1
        #     ignore-unfixed: true
        #     severity: "CRITICAL,HIGH"
            
        # - name: Docker build
        #   run: |
        #     docker login automatedselhosted-dkaef6a5cubzdaae.azurecr.io -u automatedselhosted -p ${{secrets.pat}}
        #     docker push automatedselhosted-dkaef6a5cubzdaae.azurecr.io/frontend:${{ github.run_id }}  
          

            # - name: Run SonarCloud analysis for Vue using `sonar`
      #   run: |
      #     npm install -g sonar
      #     sonar \
      #       -Dsonar.host.url=https://sonarcloud.io \
      #       -Dsonar.token=ac35b1a790aa492f9bbe0a1adcd52ea77ff4adb4
      # - name: SonarCloud Scan
      #   uses: SonarSource/sonarcloud-github-action@v2
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   with:
      #     args: >
      #       -Dsonar.projectKey=Vue3 app
      #       -Dsonar.organization=Sharnitha-sonarcloud1
      
      # - name: Docker build
      #   run: |
      #     docker login thisonetypeofstoragingdockerimage.azurecr.io -u thisonetypeofstoragingdockerimage -p ${{secrets.pat}}
      #     docker push thisonetypeofstoragingdockerimage.azurecr.io/frontend:${{ github.run_id }}  
     
